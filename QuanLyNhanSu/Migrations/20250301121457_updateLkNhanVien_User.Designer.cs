// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyNhanSu.Data;

#nullable disable

namespace QuanLyNhanSu.Migrations
{
    [DbContext(typeof(QuanLyNhanSuContext))]
    [Migration("20250301121457_updateLkNhanVien_User")]
    partial class updateLkNhanVien_User
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QuanLyNhanSu.Data.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.BoPhan", b =>
                {
                    b.Property<int>("IdBP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBP"));

                    b.Property<string>("TenBP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdBP");

                    b.ToTable("BoPhan");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.ChucVu", b =>
                {
                    b.Property<int>("IdCV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCV"));

                    b.Property<string>("TenCV")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCV");

                    b.ToTable("ChucVu");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.DanToc", b =>
                {
                    b.Property<int>("IdDT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDT"));

                    b.Property<string>("TenDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdDT");

                    b.ToTable("DanToc");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.GioiTinh", b =>
                {
                    b.Property<int>("IdGioiTinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGioiTinh"));

                    b.Property<string>("GioiTinhs")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdGioiTinh");

                    b.ToTable("GioiTinh");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.HopDongLaoDong", b =>
                {
                    b.Property<int>("IdHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHD"));

                    b.Property<decimal?>("HeSoLuong")
                        .IsRequired()
                        .HasColumnType("decimal(4,2)");

                    b.Property<int?>("IdNV")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("LoaiHopDong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("LuongCoBan")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("NgayBatDau")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKy")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoHD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdHD");

                    b.HasIndex("IdNV");

                    b.ToTable("HopDongLaoDong");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.LoaiCa", b =>
                {
                    b.Property<int>("IdCa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCa"));

                    b.Property<TimeSpan?>("GioBatDau")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("GioKetThuc")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<decimal?>("HeSoLuong")
                        .IsRequired()
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("TenCa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCa");

                    b.ToTable("LoaiCa");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.LoaiCong", b =>
                {
                    b.Property<int>("IdCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCong"));

                    b.Property<decimal?>("HeSoLuong")
                        .IsRequired()
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("TenCong")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("IdCong");

                    b.ToTable("LoaiCong");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.LoaiNhanVien", b =>
                {
                    b.Property<int>("IdLoaiNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLoaiNV"));

                    b.Property<string>("LoaiNV")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdLoaiNV");

                    b.ToTable("LoaiNhanVien");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.NhanVien", b =>
                {
                    b.Property<int>("IdNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNV"));

                    b.Property<string>("Anh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("HoKhau")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("IdBP")
                        .HasColumnType("int");

                    b.Property<int>("IdCV")
                        .HasColumnType("int");

                    b.Property<int>("IdDT")
                        .HasColumnType("int");

                    b.Property<int>("IdGioiTinh")
                        .HasColumnType("int");

                    b.Property<int?>("IdLoaiNV")
                        .HasColumnType("int");

                    b.Property<int>("IdPB")
                        .HasColumnType("int");

                    b.Property<int?>("IdTD")
                        .HasColumnType("int");

                    b.Property<int?>("IdTG")
                        .HasColumnType("int");

                    b.Property<int?>("IdTTHonNhan")
                        .HasColumnType("int");

                    b.Property<int>("IdTTLamViec")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNV")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiSinh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("QueQuan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("QuocTich")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TamChu")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TenNV")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdNV");

                    b.HasIndex("IdBP");

                    b.HasIndex("IdCV");

                    b.HasIndex("IdDT");

                    b.HasIndex("IdGioiTinh");

                    b.HasIndex("IdLoaiNV");

                    b.HasIndex("IdPB");

                    b.HasIndex("IdTD");

                    b.HasIndex("IdTG");

                    b.HasIndex("IdTTHonNhan");

                    b.HasIndex("IdTTLamViec");

                    b.HasIndex("IdUser")
                        .IsUnique()
                        .HasFilter("[IdUser] IS NOT NULL");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.PhongBan", b =>
                {
                    b.Property<int>("IdPB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPB"));

                    b.Property<string>("TenPB")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPB");

                    b.ToTable("PhongBan");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TTHonNhan", b =>
                {
                    b.Property<int>("IdTTHonNhan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTTHonNhan"));

                    b.Property<string>("TTHonNhans")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdTTHonNhan");

                    b.ToTable("TTHonNhan");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TTLamViec", b =>
                {
                    b.Property<int>("IdTTLamViec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTTLamViec"));

                    b.Property<string>("TTLamViecs")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTTLamViec");

                    b.ToTable("TTLamViec");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TienLuong", b =>
                {
                    b.Property<int>("IdTL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTL"));

                    b.Property<bool>("DaNhanTien")
                        .HasColumnType("bit");

                    b.Property<int>("IdHD")
                        .HasColumnType("int");

                    b.Property<int>("IdNV")
                        .HasColumnType("int");

                    b.Property<decimal?>("LuongDaUng")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LuongTangCa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayNhanTien")
                        .HasColumnType("date");

                    b.Property<int>("SoNgayCong")
                        .HasColumnType("int");

                    b.Property<int>("Thang")
                        .HasColumnType("int");

                    b.Property<decimal>("TongLuong")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdTL");

                    b.HasIndex("IdHD");

                    b.HasIndex("IdNV");

                    b.ToTable("TienLuong");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TonGiao", b =>
                {
                    b.Property<int>("IdTG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTG"));

                    b.Property<string>("TenTG")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.HasKey("IdTG");

                    b.ToTable("TonGiao");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TrinhDo", b =>
                {
                    b.Property<int>("IdTD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTD"));

                    b.Property<string>("TenTD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTD");

                    b.ToTable("TrinhDo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QuanLyNhanSu.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QuanLyNhanSu.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanSu.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QuanLyNhanSu.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.HopDongLaoDong", b =>
                {
                    b.HasOne("QuanLyNhanSu.Models.NhanVien", "NhanVien")
                        .WithMany("HopDongLaoDongs")
                        .HasForeignKey("IdNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.NhanVien", b =>
                {
                    b.HasOne("QuanLyNhanSu.Models.BoPhan", "BoPhan")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdBP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanSu.Models.ChucVu", "ChucVu")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdCV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanSu.Models.DanToc", "DanToc")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdDT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanSu.Models.GioiTinh", "GioiTinh")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdGioiTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanSu.Models.LoaiNhanVien", "LoaiNhanVien")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdLoaiNV");

                    b.HasOne("QuanLyNhanSu.Models.PhongBan", "PhongBan")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdPB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanSu.Models.TrinhDo", "TrinhDo")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdTD");

                    b.HasOne("QuanLyNhanSu.Models.TonGiao", "TonGiao")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdTG");

                    b.HasOne("QuanLyNhanSu.Models.TTHonNhan", "TTHonNhan")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdTTHonNhan");

                    b.HasOne("QuanLyNhanSu.Models.TTLamViec", "TTLamViec")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdTTLamViec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanSu.Data.AppUser", "User")
                        .WithOne("NhanVien")
                        .HasForeignKey("QuanLyNhanSu.Models.NhanVien", "IdUser");

                    b.Navigation("BoPhan");

                    b.Navigation("ChucVu");

                    b.Navigation("DanToc");

                    b.Navigation("GioiTinh");

                    b.Navigation("LoaiNhanVien");

                    b.Navigation("PhongBan");

                    b.Navigation("TTHonNhan");

                    b.Navigation("TTLamViec");

                    b.Navigation("TonGiao");

                    b.Navigation("TrinhDo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TienLuong", b =>
                {
                    b.HasOne("QuanLyNhanSu.Models.HopDongLaoDong", "HopDongLaoDong")
                        .WithMany("TienLuongs")
                        .HasForeignKey("IdHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanSu.Models.NhanVien", "NhanVien")
                        .WithMany("TienLuongs")
                        .HasForeignKey("IdNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HopDongLaoDong");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyNhanSu.Data.AppUser", b =>
                {
                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.BoPhan", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.ChucVu", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.DanToc", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.GioiTinh", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.HopDongLaoDong", b =>
                {
                    b.Navigation("TienLuongs");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.LoaiNhanVien", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.NhanVien", b =>
                {
                    b.Navigation("HopDongLaoDongs");

                    b.Navigation("TienLuongs");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.PhongBan", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TTHonNhan", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TTLamViec", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TonGiao", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyNhanSu.Models.TrinhDo", b =>
                {
                    b.Navigation("NhanViens");
                });
#pragma warning restore 612, 618
        }
    }
}
